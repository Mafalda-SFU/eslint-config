// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`layout 1`] = `
Object {
  "env": Object {
    "es2022": true,
  },
  "extends": Array [
    "eslint:recommended",
    "plugin:@mafalda/recommended",
    "plugin:import/recommended",
    "plugin:json/recommended",
    "plugin:n/recommended",
  ],
  "overrides": Array [
    Object {
      "env": Object {
        "jest/globals": true,
      },
      "extends": Array [
        "plugin:jest/all",
      ],
      "files": Array [
        "**/__tests__/**/*.[jt]s?(x)",
        "**/?(*.)+(spec|test).[jt]s?(x)",
      ],
      "overrides": Array [
        Object {
          "files": Array [
            "*.js?(x)",
          ],
          "rules": Object {
            "jest/unbound-method": "off",
          },
        },
        Object {
          "files": Array [
            "*.ts?(x)",
          ],
          "rules": Object {
            "@typescript-eslint/unbound-method": "off",
          },
        },
      ],
      "plugins": Array [
        "jest",
      ],
      "rules": Object {
        "jest/no-disabled-tests": "warn",
        "jest/no-focused-tests": "error",
        "jest/no-hooks": Array [
          "error",
          Object {
            "allow": Array [
              "afterEach",
              "beforeEach",
            ],
          },
        ],
        "jest/require-top-level-describe": "off",
      },
    },
    Object {
      "extends": Array [
        "plugin:@mafalda/typescript",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:import/typescript",
      ],
      "files": Array [
        "*.ts?(x)",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "project": "./tsconfig*.json",
      },
      "rules": Object {
        "@typescript-eslint/ban-ts-comment": Array [
          "error",
          Object {
            "minimumDescriptionLength": 8,
            "ts-ignore": "allow-with-description",
          },
        ],
        "@typescript-eslint/no-shadow": "error",
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/object-curly-spacing": "error",
        "no-shadow": "off",
        "object-curly-spacing": "off",
      },
    },
  ],
  "parserOptions": Object {
    "ecmaVersion": 2022,
    "sourceType": "module",
  },
  "plugins": Array [
    "require-duplicate",
    "sort-destructure-keys",
    "sort-keys",
    "unused-imports",
  ],
  "rules": Object {
    "@mafalda/brace-style": Array [
      "error",
      "allman-multiline",
      Object {
        "allowSingleLine": true,
      },
    ],
    "array-bracket-spacing": "error",
    "arrow-body-style": "warn",
    "arrow-parens": Array [
      "error",
      "as-needed",
    ],
    "class-methods-use-this": "error",
    "comma-dangle": "error",
    "consistent-return": Array [
      "error",
      Object {
        "treatUndefinedAsUnspecified": true,
      },
    ],
    "curly": Array [
      "error",
      "multi",
    ],
    "function-paren-newline": Array [
      "error",
      "consistent",
    ],
    "import/extensions": Array [
      "error",
      "ignorePackages",
      Object {
        "ts": "never",
        "tsx": "never",
      },
    ],
    "import/no-named-as-default": "warn",
    "import/no-unresolved": "off",
    "import/order": Array [
      "error",
      Object {
        "alphabetize": Object {
          "order": "asc",
        },
        "newlines-between": "always",
        "warnOnUnassignedImports": true,
      },
    ],
    "import/prefer-default-export": "warn",
    "indent": Array [
      "error",
      2,
      Object {
        "SwitchCase": 1,
        "ignoredNodes": Array [
          "TemplateLiteral",
        ],
        "offsetTernaryExpressions": true,
      },
    ],
    "max-classes-per-file": "error",
    "max-len": Array [
      "warn",
      Object {
        "ignorePattern": "^\\\\s*((//|\\\\*)?\\\\s*\\\\S*[^:/?#]://[^?#]\\\\S*\\\\s*$|import\\\\s([^\\\\{]|//|/\\\\*)+)",
        "tabWidth": 2,
      },
    ],
    "n/prefer-promises/dns": "error",
    "n/prefer-promises/fs": "error",
    "newline-per-chained-call": "warn",
    "no-console": "error",
    "no-extra-boolean-cast": "error",
    "no-multiple-empty-lines": Array [
      "error",
      Object {
        "max": 2,
        "maxBOF": 1,
        "maxEOF": 0,
      },
    ],
    "no-nested-ternary": "warn",
    "no-new": "warn",
    "no-param-reassign": "off",
    "no-plusplus": "warn",
    "no-shadow": "warn",
    "no-tabs": "error",
    "no-undef-init": "error",
    "no-unused-private-class-members": "error",
    "no-unused-vars": "off",
    "no-useless-catch": "error",
    "no-useless-escape": "error",
    "no-void": Array [
      "error",
      Object {
        "allowAsStatement": true,
      },
    ],
    "object-curly-newline": Array [
      "error",
      Object {
        "consistent": true,
        "multiline": true,
      },
    ],
    "object-curly-spacing": "error",
    "one-var": Array [
      "error",
      "never",
    ],
    "prefer-destructuring": Array [
      "error",
      Object {
        "array": true,
        "object": true,
      },
      Object {
        "enforceForRenamedProperties": true,
      },
    ],
    "quote-props": Array [
      "error",
      "as-needed",
    ],
    "quotes": Array [
      "error",
      "single",
      Object {
        "avoidEscape": true,
      },
    ],
    "require-duplicate/no-duplicate": "error",
    "sort-destructure-keys/sort-destructure-keys": "error",
    "sort-keys": "off",
    "sort-keys/sort-keys-fix": Array [
      "error",
      "asc",
      Object {
        "natural": true,
      },
    ],
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": Array [
      "warn",
      Object {
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "vars": "all",
        "varsIgnorePattern": "^_",
      },
    ],
  },
}
`;
